package fr.gilles.gplayer;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import javax.swing.*;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import java.awt.*;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

/**
 *
 * @author gilles
 *
 */
public class Frame extends javax.swing.JFrame implements java.awt.event.MouseListener{

    /**
     * Creates new form Frame
     */
    // Variables declaration - do not modify
    private javax.swing.JMenu Audio;
    private java.awt.Button Boucle;
    private javax.swing.JPanel ControlPlayPanel;
    private java.awt.Label End;
    private javax.swing.JMenu File;
    private javax.swing.JMenu Look;
    private javax.swing.JMenuBar MenuBar;
    private java.awt.Button Next;
    private java.awt.Label Now;
    private java.awt.Button Play;
    private java.awt.Button PlayList;
    private javax.swing.JProgressBar PlayProgress;
    private Panel PlayView;
    private java.awt.Button Prev;
    private javax.swing.JPanel ProgressPanel;
    private java.awt.Button Random;
    private java.awt.Button Resize;
    private javax.swing.JMenu Settings;
    private javax.swing.JMenu Video;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar2;
    private Actualisation act = new Actualisation();
    private javax.swing.JSlider Volume;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration
    public Frame() {
        initComponents();
        this.setMinimumSize(new Dimension(800,600));
        this.setFocusable(true);
        this.requestFocus();
        addWindowListener(new WindowAdapter() {
            public void windowOpened(WindowEvent e) {
                requestFocus();
            }
        });
        this.setIconImage(new ImageIcon(getClass().getResource("/Icones/title.png")).getImage());
        this.addKeyListener(new java.awt.event.KeyListener(){

            @Override
            public void keyTyped(KeyEvent key) {
                /*
                System.out.println(key.getSource());
                System.out.println(key.getKeyChar());
                */

                switch(key.getKeyChar()){
                    case ' ' ->{
                        setooglePlay();
                    }
                    case 'o' ->{

                    }
                    case 'p'->{
                        applyPrev();
                    }
                    case 'n' ->{
                        applyNext();
                    }

                }

            }

            @Override
            public void keyPressed(KeyEvent key) {

            }

            @Override
            public void keyReleased(KeyEvent key) {

            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        PlayView = new Panel();
        ControlPlayPanel = new javax.swing.JPanel();
        Play = new java.awt.Button();
        Prev = new java.awt.Button();
        Next = new java.awt.Button();
        ProgressPanel = new javax.swing.JPanel();
        PlayProgress = new javax.swing.JProgressBar();
        End = new java.awt.Label();
        Now = new java.awt.Label();
        Resize = new java.awt.Button();
        PlayList = new java.awt.Button();
        Random = new java.awt.Button();
        Boucle = new java.awt.Button();
        MenuBar = new javax.swing.JMenuBar();
        File = new javax.swing.JMenu();
        Video = new javax.swing.JMenu();
        Audio = new javax.swing.JMenu();
        Look = new javax.swing.JMenu();
        Settings = new javax.swing.JMenu();

        jMenu3.setText("File");
        jMenuBar2.add(jMenu3);

        jMenu4.setText("Edit");
        jMenuBar2.add(jMenu4);
        jLabel1 = new JLabel();
        jLabel1.setText("volume");

        Volume = new JSlider();
        Volume.enable(false);
        Volume.addChangeListener(new ChangeListener() {
            @Override
            public void stateChanged(ChangeEvent e) {
                PlayView.setVolume(Volume.getValue()*2);
            }
        });


        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gplayer");

        PlayView.setMinimumSize(new Dimension(400,300));
        javax.swing.GroupLayout Play_progressLayout = new javax.swing.GroupLayout(PlayView);
        PlayView.setLayout(Play_progressLayout);
        Play_progressLayout.setHorizontalGroup(
                Play_progressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 0, Short.MAX_VALUE)
        );
        Play_progressLayout.setVerticalGroup(
                Play_progressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 451, Short.MAX_VALUE)
        );

        Play.setLabel("Play");
       Play.addMouseListener(this);


        Prev.setLabel("Prev");
        Prev.addMouseListener(this);
        Prev.setMinimumSize(new java.awt.Dimension(37, 23));

        Next.setLabel("Next");
        Next.addMouseListener(this);
        Next.setMinimumSize(new java.awt.Dimension(37, 23));
        Next.setPreferredSize(new java.awt.Dimension(37, 23));

        End.setText("--");

        Now.setText("--");

        Resize.setLabel("Resize");

        PlayList.setLabel("PlayList");

        Random.setLabel("Random");

        Boucle.setLabel("Boucle");
        PlayProgress.setMinimum(0);
        PlayProgress.setIndeterminate(false);
        PlayProgress.setMaximum(100);
        PlayProgress.setForeground(java.awt.Color.blue);
        PlayProgress.setValue(0);
        PlayProgress.setStringPainted(true);
        PlayProgress.addChangeListener(new javax.swing.event.ChangeListener(){

            @Override
            public void stateChanged(ChangeEvent changeEvent) {

            }
        });

        javax.swing.GroupLayout ProgressPanelLayout = new javax.swing.GroupLayout(ProgressPanel);
        ProgressPanel.setLayout(ProgressPanelLayout);
        ProgressPanelLayout.setHorizontalGroup(
                ProgressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(ProgressPanelLayout.createSequentialGroup()
                                .addGroup(ProgressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(ProgressPanelLayout.createSequentialGroup()
                                                .addComponent(Now, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(PlayProgress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGap(6, 6, 6)
                                                .addComponent(End, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(ProgressPanelLayout.createSequentialGroup()
                                                .addComponent(Resize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(PlayList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(Random, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(Boucle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 208, Short.MAX_VALUE)
                                                .addComponent(jLabel1)
                                                .addGap(18, 18, 18)
                                                .addComponent(Volume, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap())
        );
        ProgressPanelLayout.setVerticalGroup(
                ProgressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(ProgressPanelLayout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addGroup(ProgressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(Now, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(End, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(PlayProgress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(ProgressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(Resize, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                                        .addComponent(PlayList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(Random, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(Boucle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ProgressPanelLayout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addGroup(ProgressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(Volume, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addContainerGap())
        );

        javax.swing.GroupLayout ControlPlayPanelLayout = new javax.swing.GroupLayout(ControlPlayPanel);
        ControlPlayPanel.setLayout(ControlPlayPanelLayout);
        ControlPlayPanelLayout.setHorizontalGroup(
                ControlPlayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(ControlPlayPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(ControlPlayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(Play, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(ControlPlayPanelLayout.createSequentialGroup()
                                                .addComponent(Prev, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(Next, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ProgressPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
        );
        ControlPlayPanelLayout.setVerticalGroup(
                ControlPlayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(ControlPlayPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(Play, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(ControlPlayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(Prev, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(Next, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(ControlPlayPanelLayout.createSequentialGroup()
                                .addComponent(ProgressPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
        );

        File.setText("File");
        File.addMouseListener(new HeaderListener());
        File.setName("file");
        MenuBar.add(File);

        Video.setText("Video");
        Video.addMouseListener(new HeaderListener());
        Video.setName("video");
        MenuBar.add(Video);

        Audio.setText("Audio");
        Audio.addMouseListener(new HeaderListener());
        Audio.setName("audio");
        MenuBar.add(Audio);

        Look.setText("Look");
        Look.addMouseListener(new HeaderListener());
        Look.setName("look");
        MenuBar.add(Look);

        Settings.setText("Settings");
        Settings.setName("settings");
        Settings.addMouseListener(new HeaderListener());
        MenuBar.add(Settings);

        setJMenuBar(MenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(PlayView, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ControlPlayPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(PlayView, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ControlPlayPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );


        pack();
    }// </editor-fold>

    private void PlayActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    @Override
    public void mouseClicked(MouseEvent e) {
        switch(( (java.awt.Button)e.getSource()).getLabel()){
            case "Play"->{
                setooglePlay();
            }
            case "Prev"->{
                applyPrev();
            }
            case "Next"->{
                applyNext();
            }
        }
    }

    @Override
    public void mousePressed(MouseEvent mouseEvent) {

    }

    @Override
    public void mouseReleased(MouseEvent mouseEvent) {

    }

    @Override
    public void mouseEntered(MouseEvent mouseEvent) {

    }

    @Override
    public void mouseExited(MouseEvent mouseEvent) {

    }



    private void setooglePlay(){
        if(!PlayView.isLoaded()){
            try {
                UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
            } catch (ClassNotFoundException | UnsupportedLookAndFeelException | IllegalAccessException | InstantiationException e) {
                e.printStackTrace();
            }
            javax.swing.JFileChooser choose = new javax.swing.JFileChooser() ;
            int returnval = choose.showOpenDialog(this);
            if(returnval == JFileChooser.APPROVE_OPTION){
                if(choose.getSelectedFile().isFile() && choose.getSelectedFile().canRead()){

                    if(PlayView.setFilename(choose.getSelectedFile().getAbsolutePath())){
                        this.setTitle(choose.getSelectedFile().getName());
                        this.End.setText(PlayView.getVideoDuration());
                        Volume.enable(true);
                        Actualiser();
                        act.start();
                    }
                }else{
                    javax.swing.JOptionPane.showMessageDialog(this,"Cannot read this File");
                }
            }
        }else if(PlayView.isIsplaying()){
            PlayView.pause();


        }else if(PlayView.isLoaded() && !PlayView.isIsplaying()){
            PlayView.playVideo();
            act = new Actualisation();
            act.start();
        }
    }
    public void Actualiser(){
        this.requestFocus();
        this.Now.setText(String.valueOf(PlayView.getNow()));
        this.End.setText(PlayView.getVideoDuration());
        PlayProgress.setValue((int)PlayView.progress());
        this.setTitle(PlayView.getFilename().substring(PlayView.getFilename().lastIndexOf("/")+1));
    }
    public boolean isplaying(){
        return PlayView.isIsplaying();
    }
    private void applyNext(){
        PlayView.applyNext();
    }
    private void applyPrev(){
        PlayView.applyPrev();
    }

}
